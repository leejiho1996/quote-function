plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.9'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.graalvm.buildtools.native' version '0.10.6'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'
description = 'Quotes from the books in the libarary'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-function-web'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

bootBuildImage {
	builder = 'docker.io/paketobuildpacks/builder-jammy-tiny' // 컨테이너 이미지 크기를 최소로 하기위해 tiny버전 사용
	environment = ['BP_NATIVE_IMAGE': 'true'] // graalVM 지원을 활성화, 컨테이너화된 네이티브 이미지 생성
	imageName = "${project.name}"

	docker {
		publishRegistry {
			username = project.findProperty("registryUsername")
			password = project.findProperty("registryToken")
			url = project.findProperty("registryUrl")
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
